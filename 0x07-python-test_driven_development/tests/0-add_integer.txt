=====================
Module: 0-add_integer
=====================

Numbers
=======

``add_integer()`` returns the sum of its two arguments, which is
equivalent to using the ``+`` operator

::

    >>> from 0-add_integer import add_integer
    >>> add_integer(1, 2)
    3

    >>> add_integer(100, -2)
    98

    >>> add_integer(2)
    100

    >>> add_integer(100.3, -2)
    98

Non-Numbers
===========

``add_integer()`` is not defined for data types other than int and float,
and should raise a ``TypeError`` upon recieving an invalid type

::

    >>> add_integer("one", 1)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(1, "one")
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer([1, 1], 1)
    Traceback (most recent call last):
    TypeError: a must be an integer

Argument Number
===============

``add_integer()`` must recieve one or more arguments; Only the first two
arguments are used

::

    >>> add_integer(2)
    100
    >>> add_integer(1, 1, 1)
    2
    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'
